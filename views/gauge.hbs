{{#if standalone}}
    <script type="text/javascript" src="/gauge.min.js"></script>
    <script type="text/javascript" src="/jquery-2.1.1.js"></script>
{{/if}}

<canvas id="gauge_{{sensor}}"></canvas>
<script>
    var gauge_{{sensor}} = new Gauge({
        width       : {{width}},
        height      : {{height}},

        {{#if glow}}
        glow        : {{glow}},
        {{/if}}

        {{#if units}}
        units       : "{{units}}",
        {{/if}}

        {{#if title}}
        title       : "{{title}}",
        {{/if}}

        {{#if minValue}}
        minValue    : {{minValue}},
        {{/if}}

        {{#if maxValue}}
        maxValue    : {{maxValue}},
        {{/if}}

        {{#if majorTicks}}
        majorTicks  : {{{majorTicks}}},
        {{/if}}

        {{#if minorTicks}}
        minorTicks  : {{minorTicks}},
        {{/if}}

        {{#if strokeTicks}}
        strokeTicks : {{strokeTicks}},
        {{/if}}

        {{#if highlights}}
        highlights  : {{{highlights}}},
        {{else}}
        highlights : [{ from : {{minValue}}, to : {{maxValue}}, color : "#fff" }],
        {{/if}}

        {{#if valueFormat}}
        valueFormat: {{{valueFormat}}},
        {{/if}}

        {{#if colors}}
        colors      : {{{colors}}},
        {{/if}}

        animation : {
            duration: 500,
            fn : 'bounce'
        },
        renderTo    : 'gauge_{{sensor}}'
    });

    gauge_{{sensor}}.onready = function() {

        $.getJSON("/api/sensors/{{sensor}}?minutes=0.5", function(updates) {
            if (updates.length > 0) {
                var sum = 0;
                updates.forEach(function (update) {
                    sum = sum + update[1];
                });
                gauge_{{sensor}}.setValue((sum)/updates.length);
            }
        });

        setInterval( function() {
            $.getJSON("/api/sensors/{{sensor}}?minutes=0.5", function(updates) {
                if (updates.length > 0) {
                    var sum = 0;
                    updates.forEach(function (update) {
                        sum = sum + update[1];
                    });
                    gauge_{{sensor}}.setValue((sum)/updates.length);
                }
            });
        }, 30000);
    };

    gauge_{{sensor}}.draw();
    gauge_{{sensor}}.setValue({{value}});
</script>